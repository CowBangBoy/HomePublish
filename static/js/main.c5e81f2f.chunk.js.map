{"version":3,"sources":["Components/Footer/Footer.tsx","Resource/Tools/function/ImgAsset.ts","Pages/Home/Home.tsx","App.tsx","serviceWorker.ts","index.tsx","Resource/Img/myPhoto/photo.png","Resource/Img/myPhoto/photo_mobile.png"],"names":["Footer","className","Photo_PC","photo_PC","Photo_Mobile","photo_mobile","Home","withRouter","props","useContext","$Global","global","setGlobal","useState","isInit","setIsInit","window","innerWidth","isMobile","setIsMobile","info","setInfo","exp","setExp","tooltip","setTooltip","useEffect","a","db","firebase","getPersonalInfo","collection","get","then","res","forEach","doc","id","curr","data","getExp","reduce","prev","projects","map","e","show","handle","__isMobile","onResize","addEventListener","console","log","navigator","language","removeEventListener","useController","parallaxController","update","caculateExpTime","useMemo","career","length","val","comp","coName","startTime","eachTotalTime","endTime","monent","seconds","diff","Math","abs","low","floor","matchIcon","arg","toLocaleLowerCase","icon","faCode","faCss3","faSass","faJsSquare","faReact","title","toUpperCase","lastName","firstName","x","style","position","onMouseOver","onMouseLeave","cls","random","greeting","response","src","deviceType","alt","tagOuter","y","viewBox","d","data-text","enName","onClick","open","resumeAddress","skills","html","key","js","filter","eIndex","format","f","fIndex","description","height","display","alignItems","justifyContent","size","color","loading","createContext","initGlobal","sessionStorage","getItem","setItem","JSON","stringify","darkTheme","parse","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","App","parseGlobal","o","_storage","_global","Provider","value","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.c5e81f2f.chunk.js","sourcesContent":["import React from 'react';\nimport './Footer.scss';\n\nexport const Footer: React.FC = () => {\n  return (\n    <footer className=\"footer\">\n      Copyright &#169; 2020 XIE MIN\n    </footer>\n  )\n}\n\n","\nimport photo_PC from '../../Img/myPhoto/photo.png';\nimport photo_mobile from '../../Img/myPhoto/photo_mobile.png';\n\n\n\nexport const Photo_PC = photo_PC;\nexport const Photo_Mobile = photo_mobile;","import React, { useContext, useState, useEffect, useMemo } from 'react';\nimport { $Global } from '../../App';\nimport { RouteComponentProps, withRouter } from 'react-router';\nimport { deviceType } from 'react-device-detect';\nimport { PacmanLoader } from 'react-spinners';\nimport { Parallax, useController } from 'react-scroll-parallax';\nimport { Footer } from '../../Components/Footer/Footer';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faJsSquare,\n  faCss3,\n  faSass,\n  faReact\n} from '@fortawesome/free-brands-svg-icons';\nimport { faCode } from '@fortawesome/free-solid-svg-icons';\nimport * as firebase from 'firebase';\nimport cls from 'classnames';\nimport monent from 'moment';\n// asset\nimport './Home.scss';\nimport { Photo_PC, Photo_Mobile } from '../../Resource/Tools/function/ImgAsset';\n\nconst __Home: React.FC<RouteComponentProps> = props => {\n  const { global, setGlobal } = useContext($Global);\n  const [isInit, setIsInit] = useState<boolean>(false);\n  const [isMobile, setIsMobile] = useState<boolean>(window.innerWidth < 992);\n  const [info, setInfo] = useState<ApiPersonalInfo.PersonalInfo>(null);\n  const [exp, setExp] = useState<ApiExperience.Experience>([]);\n  const [tooltip, setTooltip] = useState<boolean>(false);\n  // connect to firebase\n  useEffect(() => {\n    const handle = async () => {\n      const db = firebase.firestore();\n      // get personal info\n      const getPersonalInfo = db\n        .collection('personal_info')\n        .get()\n        .then(res => {\n          res.forEach(doc => {\n            if (doc.id === 'eofGwuZucAff5dvvw4vY')\n              return setInfo(\n                curr => doc.data() as ApiPersonalInfo.PersonalInfo\n              );\n          });\n        });\n      // get exp\n      const getExp = db\n        .collection('experience')\n        .get()\n        .then(res => {\n          res.forEach(doc => {\n            if (doc.id === 'list') {\n              let { exp } = doc.data();\n              setExp(curr => {\n                exp.reduce(\n                  (\n                    prev: ApiExperience.Company[],\n                    curr: ApiExperience.Company\n                  ) => {\n                    if (curr.projects) {\n                      let newData = {\n                        ...curr,\n                        projects: curr.projects.map(e => ({\n                          ...e,\n                          show: false\n                        }))\n                      };\n                      return [...prev];\n                    }\n                  },\n                  []\n                );\n                return exp as ApiExperience.Experience;\n              });\n            }\n          });\n        });\n      const personalInfo = await getPersonalInfo;\n      const exp = await getExp;\n      setIsInit(true);\n    };\n    handle();\n  }, []);\n  // resize\n  useEffect(() => {\n    let __isMobile = window.innerWidth < 992;\n    const onResize = function(e: UIEvent) {\n      if (__isMobile) return setIsMobile(__isMobile);\n      if (!__isMobile) return setIsMobile(!__isMobile);\n    };\n    window.addEventListener('resize', onResize);\n    console.log(navigator.language, 'lang');\n    return () => {\n      window.removeEventListener('resize', onResize);\n    };\n  }, []);\n  // fix resize\n  useController().parallaxController.update();\n  // 計算累積經驗時數\n  const caculateExpTime = useMemo(() => {\n    let career = 0;\n    if (exp && exp.length > 0) {\n      career = exp.reduce((val, comp: ApiExperience.Company) => {\n        const { coName, startTime, endTime, projects } = comp;\n        let eachTotalTime = monent(startTime.seconds * 1000).diff(\n          monent(),\n          'years',\n          true\n        );\n        eachTotalTime = Math.abs(eachTotalTime);\n        return val + eachTotalTime;\n      }, career);\n      const low = Math.floor(career);\n      return career >= low+0.5 ? `${low}年半` : `${low}年`;\n    }\n  }, [exp]);\n  // match the icon\n  const matchIcon = (arg: string) => {\n    arg = arg.toLocaleLowerCase();\n    switch (arg) {\n      case 'html5':\n        return (\n          <span className=\"mr-3\">\n            <FontAwesomeIcon icon={faCode} />\n          </span>\n        );\n      case 'css3':\n        return (\n          <span className=\"mr-3\">\n            <FontAwesomeIcon icon={faCss3} />\n          </span>\n        );\n      case 'scss/sass':\n        return (\n          <span className=\"mr-3\">\n            <FontAwesomeIcon icon={faSass} />\n          </span>\n        );\n      case 'js':\n        return (\n          <span className=\"mr-3\">\n            <FontAwesomeIcon icon={faJsSquare} />\n          </span>\n        );\n      case 'javascript':\n        return (\n          <span className=\"mr-3\">\n            <FontAwesomeIcon icon={faJsSquare} />\n          </span>\n        );\n      case 'ts':\n        return <span className=\"mr-3\">{'{TS}'}</span>;\n      case 'typescript':\n        return <span className=\"mr-3\">{'{TS}'}</span>;\n      case 'react':\n        return (\n          <span className=\"mr-3\">\n            <FontAwesomeIcon icon={faReact} />\n          </span>\n        );\n      case 'react.js':\n        return (\n          <span className=\"mr-3\">\n            <FontAwesomeIcon icon={faReact} />\n          </span>\n        );\n    }\n  };\n  // Loading component\n  if (!isInit || !info || !exp) {\n    return (\n      <div\n        style={{\n          height: '100vh',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center'\n        }}\n      >\n        <PacmanLoader size={50} color={'#4782E0'} loading={true} />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"wrap\">\n      {/* <Header></Header>*/}\n      <section>\n        <div className=\"info\">\n          <div>\n            {(() => {\n              if (isMobile)\n                return (\n                  <>\n                    <div className=\"info__subtitle\">\n                      {info.title.toUpperCase()}\n                    </div>\n                    <div className=\"info__title\">\n                      {`${info.lastName.toUpperCase()} ${info.firstName.toUpperCase()}`}\n                    </div>\n                  </>\n                );\n              if (!isMobile)\n                return (\n                  <Parallax x={['60', '-60']}>\n                    <div className=\"info__subtitle\">\n                      {info.title.toUpperCase()}\n                    </div>\n                    <div className=\"info__title\">\n                      {`${info.lastName.toUpperCase()} ${info.firstName.toUpperCase()}`}\n                    </div>\n                  </Parallax>\n                );\n            })()}\n          </div>\n          <div\n            style={{ position: 'relative' }}\n            onMouseOver={() => {\n              setTooltip(true);\n            }}\n            onMouseLeave={() => setTooltip(false)}\n          >\n            {(() => {\n              if (isMobile)\n                return (\n                  <>\n                    <div\n                      className={cls('tooltip', tooltip ? 'tooltip_show' : '')}\n                    >\n                      <div className=\"tooltip__content\">\n                        {(() => {\n                          const res = Math.floor(\n                            Math.random() * info.greeting.length\n                          );\n                          return info.greeting[res].response;\n                        })()}\n                        !\n                      </div>\n                      <i></i>\n                    </div>\n                    <div className=\"info__photo\">\n                      <img\n                        src={deviceType === 'mobile' ? Photo_Mobile : Photo_PC}\n                        // src=\"https://www.nicknotas.com/wp-content/uploads/2018/07/Guy_Duck_Face.jpg\"\n                        alt=\"\"\n                      />\n                      <div className=\"info__photo__frame\"></div>\n                      <div className=\"info__photo__frame2\"></div>\n                    </div>\n                  </>\n                );\n              if (!isMobile)\n                return (\n                  <Parallax x={['-300px', '300px']} tagOuter=\"div\">\n                    <div\n                      className={cls('tooltip', tooltip ? 'tooltip_show' : '')}\n                    >\n                      <div className=\"tooltip__content\">\n                        {(() => {\n                          const res = Math.floor(\n                            Math.random() * info.greeting.length\n                          );\n                          return info.greeting[res].response;\n                        })()}\n                        !\n                      </div>\n                      <i></i>\n                    </div>\n                    <div className=\"info__photo\">\n                      <img\n                        src={deviceType === 'mobile' ? Photo_Mobile : Photo_PC}\n                        // src=\"https://www.nicknotas.com/wp-content/uploads/2018/07/Guy_Duck_Face.jpg\"\n                        alt=\"\"\n                      />\n                      <div className=\"info__photo__frame\"></div>\n                      <div className=\"info__photo__frame2\"></div>\n                    </div>\n                  </Parallax>\n                );\n            })()}\n          </div>\n          <div className=\"mouse\"></div>\n          <div className=\"bg\">\n            <div className=\"bg__left\">\n              <Parallax y={['60', '-60']}>\n                <svg viewBox=\"0 0 15 10\">\n                  <path d=\"M3 9 L3 1 L4 1 L7 7.5 L10 1 L11 1 L11 9\"></path>\n                  <path d=\"M15 .5 L15 9\"></path>\n                </svg>\n              </Parallax>\n            </div>\n            <div className=\"bg__right\">\n              <Parallax y={['-60', '60']}>\n                <svg viewBox=\"0 0 15 10\">\n                  <path d=\"M0 .5 L0 9\"></path>\n                  <path d=\"M4 9 L4 1 L5 1 L9 8.5 L10 8.5 L10 .5\"></path>\n                </svg>\n              </Parallax>\n            </div>\n          </div>\n        </div>\n      </section>\n      <section>\n        <div className=\"contain\">\n          <div className=\"contain__title\">About</div>\n          <p className=\"background\">\n            Hi! 我叫\n            <a\n              data-text={info.enName}\n              className=\"text_important background__link\"\n              onClick={() => window.open(info.resumeAddress, 'blank')}\n            >\n              {info.enName}\n            </a>\n            ，一名前端工程師，目前累計資歷{caculateExpTime}以上，喜歡\n            <span className=\"text_delete\">被迫</span>\n            學習新技術活用於開發專案，並且與他人討論技術及實用的做法，另外也有些許的Photoshop修圖技術\n            <span className=\"text_delete\">惡搞合成圖片</span>，以及繪製簡易SVG\n            icon。\n          </p>\n        </div>\n      </section>\n      <section>\n        <div className=\"contain\">\n          <div className=\"contain__title\">Skills</div>\n          <div className=\"skills\">\n            {info.skills.html.map(e => (\n              <div className=\"skills__li\" data-text={e} key={e}>\n                {matchIcon(e)}\n                {e}\n              </div>\n            ))}\n            {info.skills.js.map(e => (\n              <div className=\"skills__li\" data-text={e} key={e}>\n                {matchIcon(e)}\n                {e}\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n      <section>\n        <div className=\"contain\">\n          <div className=\"contain__title\">Experience</div>\n          <div className=\"exp\">\n            <div>\n              {exp &&\n                exp\n                  .filter(e => e.projects && e.projects.length > 0)\n                  .map((e, eIndex) => (\n                    <div className=\"exp__item\" key={e.coName + e.endTime}>\n                      <p>\n                        {e.coName}&nbsp; &nbsp;\n                        {monent(e.startTime.seconds * 1000).format(\n                          'YYYY/MM/DD'\n                        )}\n                      </p>\n                      <ul>\n                        {e.projects &&\n                          e.projects.map((f, fIndex) => {\n                            return (\n                              <div className=\"exp__list\" key={fIndex}>\n                                <div className=\"exp__title\">\n                                  <div className=\"exp__title__num\">\n                                    {e.projects && e.projects.length > 1\n                                      ? fIndex + 1 + '.'\n                                      : ''}\n                                  </div>\n                                  {f.title}\n                                </div>\n                                <div className=\"exp__des\">{f.description}</div>\n                              </div>\n                            );\n                          })}\n                      </ul>\n                    </div>\n                  ))}\n            </div>\n          </div>\n        </div>\n      </section>\n      <Footer />\n    </div>\n  );\n};\n\nexport const Home = withRouter(__Home);\n","import React, { createContext, useState, useEffect } from 'react';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport { ParallaxProvider } from 'react-scroll-parallax';\nimport cls from 'classnames';\nimport * as firebase from 'firebase';\n// Pages\nimport { Home } from './Pages/Home/Home';\nimport './App.scss';\n\nexport const $Global = createContext({} as Global.GlobalProps);\nconst initGlobal: Global.GlobalState = (() => {\n  // dark mode\n  let darkTheme = sessionStorage.getItem('darkTheme');\n  if (!darkTheme) sessionStorage.setItem('darkTheme', JSON.stringify(false));\n  return {\n    darkTheme: JSON.parse(\n      sessionStorage.getItem('darkTheme') as string\n    ) as boolean\n  };\n})();\n// initialization firebase\nconst initFirebase = firebase.initializeApp({\n  apiKey: 'AIzaSyBlm0voO516pey8K5cNrz74Mzr8prEoEN8',\n  authDomain: 'jimxiehome.firebaseapp.com',\n  databaseURL: 'https://jimxiehome.firebaseio.com',\n  projectId: 'jimxiehome',\n  storageBucket: 'jimxiehome.appspot.com',\n  messagingSenderId: '923298927722',\n  appId: '1:923298927722:web:5e0ef948ea4a145c792613',\n  measurementId: 'G-8NV2GGVX1J'\n});\nfirebase.analytics();\n\nconst App: React.FC = () => {\n  const [global, setGlobal] = useState(initGlobal);\n  // update session\n  useEffect(() => {\n    const parseGlobal = JSON.parse(JSON.stringify(global));\n    for (let o in parseGlobal) {\n      // sessionStorage\n      let _storage = JSON.parse(sessionStorage.getItem(o) as string);\n      // global state\n      let _global = parseGlobal[o];\n      // 資料一樣不更新\n      if (JSON.stringify(_storage) !== JSON.stringify(_global)) {\n        console.log(`${o} need to update`);\n        sessionStorage.setItem(o, JSON.stringify(parseGlobal[o]));\n      }\n    }\n  }, [global]);\n\n  return (\n    <ParallaxProvider>\n      <div className={cls('App', global.darkTheme ? 'darkTheme' : '')}>\n        <$Global.Provider value={{ global, setGlobal }}>\n          <Router>\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n            </Switch>\n          </Router>\n        </$Global.Provider>\n      </div>\n    </ParallaxProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/photo.2b299498.png\";","module.exports = __webpack_public_path__ + \"static/media/photo_mobile.1aaeb9dd.png\";"],"sourceRoot":""}